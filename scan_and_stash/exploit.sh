#! /bin/sh
set -e

# A test script to exercise the scan_and_stash / scan_and_stash_ace modules.
# This should be replaced by prt later.

ACTION="${1:-full-test}"
OUTDIR="./output"
TOOL="./scan_stash_tool"
TOOL_ACE="./scan_stash_ace_tool"

implement_me() {
  local msg="${1:-NotSpecified}"

  echo "Implement me: $msg"
  exit 1
}

# --------------------------------

clean_scan_and_stash() {
  echo "# #########################"
  echo "# Clean scan_and_stash userspace"
  echo "# #########################"

  make clean-tool
}

# -----

build_scan_and_stash() {
  echo "# #########################"
  echo "# Build scan_and_stash userspace"
  echo "# #########################"

  make tool
}

# --------------------------------

clean_scan_and_stash_ace() {
  echo "# #########################"
  echo "# Clean scan_and_stash_ace userspace"
  echo "# #########################"

  make clean-ace-tool
}

# -----

build_scan_and_stash_ace() {
  echo "# #########################"
  echo "# Build scan_and_stash_ace userspace"
  echo "# #########################"

  make ace-tool
}

# --------------------------------

unload_all_modules() {
  echo "# #########################"
  echo "# Unload modules if already loaded."
  echo "# #########################"

  kldunload -v scan_stash scan_stash_ace || true
}

load_all_modules() {
  echo "# #########################"
  echo "# Load modules all modules"
  echo "# #########################"

  kldload -v \
    /boot/kernel/scan_stash_ace.ko \
    /boot/kernel/scan_stash.ko
}

prepare_output_directory() {
  echo "# #########################"
  echo "# Set up output directory to hold result files for tests, etc."
  echo "# #########################"

  if [ "x$OUTDIR" = "x" ]; then
    echo "Please specify OUTDIR in the script."
    exit 1
  fi

  case "$OUTDIR" in
      "\."|"\./"|"\.\."|"\.\./")
        echo "Do not set OUTDIR to . or .. !"
        exit 1
        ;;
      *)
        ;;
  esac

  if [ ! -d "$OUTDIR" ]; then
    mkdir -p "$OUTDIR"
  fi

  (cd "$OUTDIR" && \
    rm -f test-disabled*.out test-disabled*.err test-disabled*.txt \
          test-enabled*.out test-enabled*.err test-enabled*.txt)
}

# Invoke this with "--ace-disable" or "--ace-enable"
ace_set_config() {
  local style

  style="${1}"

  ${TOOL_ACE} "$style"
}

test_ace_disabled() {
  local tid # test id

  tid="${1:-unk}"

  echo "# #########################"
  echo "# Run ACE disabled test id: $tid"
  echo "# #########################"

  # Disable the ACE behavior.
  ace_set_config --ace-disable

  # Run the test (it should do the "normal case" behavior).
  ${TOOL} "$OUTDIR/test-disabled-vm-$tid.txt" \
    > "$OUTDIR/test-disabled-$tid.out" \
    2> "$OUTDIR/test-disabled-$tid.err"
}

test_ace_enabled() {
  local tid # test id

  tid="${1:-unk}"

  echo "# #########################"
  echo "# Run ACE enabled test id: $tid"
  echo "# #########################"

  # Enable the ACE behavior.
  ace_set_config --ace-enable

  # Run the test (it should print out the secret)..
  ${TOOL} "$OUTDIR/test-enabled-vm-$tid.txt" \
    > "$OUTDIR/test-enabled-$tid.out" \
    2> "$OUTDIR/test-enabled-$tid.err"
}

# ----------------------------------------------------------------------------
# Utility functions built from the above.

clean_all_modules() {
  clean_scan_and_stash
  clean_scan_and_stash_ace
}

build_all_modules() {
  build_scan_and_stash
  build_scan_and_stash_ace
}

prepare_test_environment() {
  clean_all_modules
  build_all_modules

  unload_all_modules
  load_all_modules
  prepare_output_directory
}

# ----------------------------------------------------------------------------
# operations we can ask the script to perform.

do_full_test() {
  prepare_test_environment

  # I don't want to make the enable/disable an argument since there might be
  # special things each of them do in the near future.
  test_ace_disabled 0
  test_ace_enabled 0
  test_ace_disabled 1

  unload_all_modules
}

do_clean() {
  unload_all_modules
  clean_all_modules
  prepare_output_directory
}

do_build() {
  clean_all_modules
  build_all_modules
}

# ----------------------------------------------------------------------------
# main

case "$ACTION" in
  "full-test")
    do_full_test
    ;;
  "clean")
    do_clean
    ;;
  "build")
  do_build
    ;;
  *)
    echo "unknown command line argument."
    echo "options are:"
    echo "  full-test"
    echo "  clean"
    exit 1
    ;;
esac












